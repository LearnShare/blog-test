generator client {
  provider = "prisma-client-js"
  output   = "../client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String     @default("")
  uid       String     @unique
  avatar    Int?
  avatarUrl String?
  role      String     @default("USER")
  intro     String     @default("")
  verified  Boolean    @default(false)
  disabled  Boolean    @default(false)
  posts     Post[]
  bookmarks Bookmark[]
  ctime     DateTime   @default(now())
  utime     DateTime?
}

model Post {
  id        Int        @id @default(autoincrement())
  author    Account    @relation(fields: [authorId], references: [id])
  authorId  Int
  uid       String     @unique
  cover     Int?
  coverUrl  String?
  title     String
  intro     String
  content   String
  format    String     @default("TEXT")
  ticket    Int?
  status    String
  views     Int        @default(0)
  bookmarks Bookmark[]
  ctime     DateTime   @default(now())
  utime     DateTime?
}

model File {
  id      Int      @id @default(autoincrement())
  creator Int
  hash    String   @unique
  type    String   @default("UNKNOWN")
  mime    String
  name    String
  ext     String
  size    Int
  ctime   DateTime @default(now())
}

enum CodeType {
  ACCOUNT_VERIFICATION
  RESET_PASSWORD
}

model Code {
  id      Int      @id @default(autoincrement())
  code    String
  type    CodeType
  account Int
  used    Boolean  @default(false)
  ctime   DateTime @default(now())
  etime   DateTime
}

model Bookmark {
  time      DateTime @default(now())
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int

  @@id([accountId, postId])
}

model Ticket {
  id      Int      @id @default(autoincrement())
  type    String
  ref     String?
  from    Int?
  to      Int?
  status  String
  message String?
  ctime   DateTime @default(now())
  utime   DateTime?
}
